{"ast":null,"code":"\"use strict\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport function fetchUser() {\n  var cookie,\n      res,\n      json,\n      _args = arguments;\n  return _regeneratorRuntime.async(function fetchUser$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          cookie = _args.length > 0 && _args[0] !== undefined ? _args[0] : '';\n\n          if (!(true && window.__user)) {\n            _context.next = 3;\n            break;\n          }\n\n          return _context.abrupt(\"return\", window.__user);\n\n        case 3:\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(fetch('/api/me', cookie ? {\n            headers: {\n              cookie: cookie\n            }\n          } : {}));\n\n        case 5:\n          res = _context.sent;\n\n          if (res.ok) {\n            _context.next = 9;\n            break;\n          }\n\n          delete window.__user;\n          return _context.abrupt(\"return\", null);\n\n        case 9:\n          _context.next = 11;\n          return _regeneratorRuntime.awrap(res.json());\n\n        case 11:\n          json = _context.sent;\n\n          if (true) {\n            window.__user = json;\n          }\n\n          return _context.abrupt(\"return\", json);\n\n        case 14:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function useFetchUser() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      required = _ref.required;\n\n  var _useState = useState(function () {\n    return !(true && window.__user);\n  }),\n      loading = _useState[0],\n      setLoading = _useState[1];\n\n  var _useState2 = useState(function () {\n    if (false) {\n      return null;\n    }\n\n    return window.__user || null;\n  }),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    if (!loading && user) {\n      return;\n    }\n\n    setLoading(true);\n    var isMounted = true;\n    fetchUser().then(function (user) {\n      // Only set the user if the component is still mounted\n      if (isMounted) {\n        // When the user is not logged in but login is required\n        if (required && !user) {\n          window.location.href = '/api/login';\n          return;\n        }\n\n        setUser(user);\n        setLoading(false);\n      }\n    });\n    return function () {\n      isMounted = false;\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return {\n    user: user,\n    loading: loading\n  };\n}","map":null,"metadata":{},"sourceType":"module"}