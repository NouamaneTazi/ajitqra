{"ast":null,"code":"\"use strict\";\n\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nexport async function fetchUser(cookie = '') {\n  if (false && window.__user) {\n    return window.__user;\n  }\n\n  const res = await fetch('/api/me', cookie ? {\n    headers: {\n      cookie\n    }\n  } : {});\n\n  if (!res.ok) {\n    delete window.__user;\n    return null;\n  }\n\n  const json = await res.json();\n\n  if (false) {\n    window.__user = json;\n  }\n\n  return json;\n}\nexport function useFetchUser({\n  required\n} = {}) {\n  const {\n    0: loading,\n    1: setLoading\n  } = useState(() => !(false && window.__user));\n  const {\n    0: user,\n    1: setUser\n  } = useState(() => {\n    if (true) {\n      return null;\n    }\n\n    return window.__user || null;\n  });\n  useEffect(() => {\n    if (!loading && user) {\n      return;\n    }\n\n    setLoading(true);\n    let isMounted = true;\n    fetchUser().then(user => {\n      // Only set the user if the component is still mounted\n      if (isMounted) {\n        // When the user is not logged in but login is required\n        if (required && !user) {\n          window.location.href = '/api/login';\n          return;\n        }\n\n        setUser(user);\n        setLoading(false);\n      }\n    });\n    return () => {\n      isMounted = false;\n    };\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  return {\n    user,\n    loading\n  };\n}","map":null,"metadata":{},"sourceType":"module"}